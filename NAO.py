import json
import utils
import time
import os

while True:
    # Conex√£o via socket 
    utils.llm_server()

    # üîπ Aguarda at√© 15 segundos pelo arquivo de √°udio
    audio_file = "audio.wav"
    for _ in range(20):  # Tenta por at√© 15 segundos (0.5s * 30)
        if os.path.exists(audio_file):
            print("Arquivo de √°udio detectado! Processando...")
            break
        print("Aguardando arquivo de √°udio...")
        time.sleep(0.5)
    else:
        print("Erro: O arquivo de √°udio n√£o foi criado a tempo!")
        continue  # Pula essa itera√ß√£o e espera a pr√≥xima grava√ß√£o

    # Puxa a pergunta e roda a LLM 
    pergunta = utils.audio_to_text(audio_file)
    print(pergunta)
    response = utils.consultar_chatgpt(pergunta)
    print(response)

    # Limpa o hist√≥rico de conversa e fecha a conex√£o
    if response.lower() == "tchau":  # Condi√ß√£o de parada
        file_path = 'data.json'
        with open(file_path, 'w', encoding='utf-8') as file:
            json.dump({"message": response}, file, ensure_ascii=False, indent=4)
        utils.limpar_historico
        #python3.socket.close()   
        break

    else:
        # Salvar a string em um arquivo JSON
        file_path = 'data.json'
        with open(file_path, 'w', encoding='utf-8') as file:
            json.dump({"message": response}, file, ensure_ascii=False, indent=4)
