import os
import threading

# Current path
PATH = os.getcwd()


def saxophone(motion_proxy, audio_player_proxy):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[-0.523136, [3, -0.146667, 0], [3, 0.16, 0]], [-0.303464, [3, -0.16, -0.109542], [3, 0.08, 0.0547712]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]], [-0.303464, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.0301958, [3, -0.0933333, 0], [3, 0.493333, 0]], [-0.190258, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[-0.128898, [3, -0.146667, 0], [3, 0.16, 0]], [-0.186771, [3, -0.16, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.186771, [3, -0.0933333, 0], [3, 0.493333, 0]], [-0.0123138, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.128898, [3, -0.146667, 0], [3, 0.16, 0]], [-0.331386, [3, -0.16, 0.0524967], [3, 0.08, -0.0262484]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.16, 0]], [-0.145772, [3, -0.16, -0.127591], [3, 0.16, 0.127591]], [0.400415, [3, -0.16, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.0933333, 0]], [0.400415, [3, -0.0933333, 0], [3, 0.266667, 0]], [-0.128898, [3, -0.266667, 0], [3, 0.226667, 0]], [0.0996681, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.0904641, [3, -0.146667, 0], [3, 0.16, 0]], [0.130432, [3, -0.16, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.08, 0]], [0.0261199, [3, -0.08, 0.0410771], [3, 0.16, -0.0821542]], [-0.239262, [3, -0.16, 0.0595843], [3, 0.16, -0.0595843]], [-0.331386, [3, -0.16, 0.0214781], [3, 0.08, -0.010739]], [-0.342125, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.342125, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.342125, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.342125, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.342125, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.342125, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.342125, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.331386, [3, -0.0933333, -0.010739], [3, 0.266667, 0.0306829]], [-0.0904641, [3, -0.266667, 0], [3, 0.226667, 0]], [-0.128814, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[-1.17193, [3, -0.146667, 0], [3, 0.16, 0]], [-1.2051, [3, -0.16, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.0933333, 0]], [-1.2051, [3, -0.0933333, 0], [3, 0.493333, 0]], [-0.437147, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[-1.15821, [3, -0.146667, 0], [3, 0.16, 0]], [-0.46639, [3, -0.16, -0.198291], [3, 0.08, 0.0991454]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]], [-0.46639, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.265904, [3, -0.0933333, 0], [3, 0.493333, 0]], [-1.15975, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[0.8, [3, -0.146667, 0], [3, 0.16, 0]], [0.41, [3, -0.16, 0.133333], [3, 0.08, -0.0666667]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]], [0.41, [3, -0.08, 0], [3, 0.0933333, 0]], [0.2, [3, -0.0933333, 0], [3, 0.493333, 0]], [0.3136, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.473963, [3, -0.146667, 0], [3, 0.16, 0]], [0.06447, [3, -0.16, -0.139423], [3, 0.08, 0.0697117]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.16, 0]], [-0.562937, [3, -0.16, 0], [3, 0.16, 0]], [0.0199001, [3, -0.16, -0.176221], [3, 0.08, 0.0881104]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.0933333, 0]], [0.0199001, [3, -0.0933333, 0.0608413], [3, 0.266667, -0.173832]], [-0.473963, [3, -0.266667, 0], [3, 0.226667, 0]], [0.139636, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[0.0706061, [3, -0.146667, 0], [3, 0.16, 0]], [-0.182504, [3, -0.16, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [-0.182504, [3, -0.08, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [-0.182504, [3, -0.08, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [-0.182504, [3, -0.08, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [-0.182504, [3, -0.08, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [-0.182504, [3, -0.08, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [-0.182504, [3, -0.08, 0], [3, 0.08, 0]], [-0.0183661, [3, -0.08, -0.048747], [3, 0.16, 0.0974941]], [0.25622, [3, -0.16, -0.0779644], [3, 0.16, 0.0779644]], [0.449421, [3, -0.16, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.08, 0]], [0.449421, [3, -0.08, 0], [3, 0.0933333, 0]], [0.449421, [3, -0.0933333, 0], [3, 0.266667, 0]], [0.0706061, [3, -0.266667, 0], [3, 0.226667, 0]], [0.116626, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.223922, [3, -0.146667, 0], [3, 0.16, 0]], [-0.516916, [3, -0.16, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, -0.0308504], [3, 0.16, 0.0617009]], [-0.239262, [3, -0.16, 0], [3, 0.16, 0]], [-0.516916, [3, -0.16, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.516916, [3, -0.0933333, 0], [3, 0.266667, 0]], [-0.223922, [3, -0.266667, -0.0627419], [3, 0.226667, 0.0533306]], [-0.168698, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[0.582879, [3, -0.146667, 0], [3, 0.16, 0]], [0.638103, [3, -0.16, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.16, 0]], [0.659577, [3, -0.16, 0], [3, 0.16, 0]], [-0.0904641, [3, -0.16, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.0904641, [3, -0.0933333, 0], [3, 0.266667, 0]], [0.582879, [3, -0.266667, 0], [3, 0.226667, 0]], [-0.0874801, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[0.458624, [3, -0.146667, 0], [3, 0.16, 0]], [-0.0182518, [3, -0.16, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.08, 0]], [0.268927, [3, -0.08, 0], [3, 0.08, 0]], [-0.0182518, [3, -0.08, 0], [3, 0.0933333, 0]], [0.268927, [3, -0.0933333, -0.0774332], [3, 0.493333, 0.40929]], [1.44192, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[0.291418, [3, -0.146667, 0], [3, 0.16, 0]], [-0.0940347, [3, -0.16, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.08, 0]], [-0.0940347, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.0940347, [3, -0.0933333, 0], [3, 0.493333, 0]], [0.0996681, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[-1.22571, [3, -0.146667, 0], [3, 0.16, 0]], [-1.15957, [3, -0.16, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.0933333, 0]], [-1.15957, [3, -0.0933333, 0], [3, 0.493333, 0]], [0.061318, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.0966001, [3, -0.146667, 0], [3, 0.16, 0]], [0.400415, [3, -0.16, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0], [3, 0.08, 0]], [0.400415, [3, -0.08, 0], [3, 0.08, 0]], [0.276162, [3, -0.08, 0.0601668], [3, 0.16, -0.120334]], [-0.141086, [3, -0.16, 0.101258], [3, 0.16, -0.101258]], [-0.331386, [3, -0.16, 0.0497883], [3, 0.08, -0.0248941]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.08, 0]], [-0.331386, [3, -0.08, 0], [3, 0.08, 0]], [-0.365133, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.331386, [3, -0.0933333, -0.0232066], [3, 0.266667, 0.0663045]], [-0.0966001, [3, -0.266667, -0.0785116], [3, 0.226667, 0.0667349]], [0.104354, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[0.108956, [3, -0.146667, 0], [3, 0.16, 0]], [0.331386, [3, -0.16, -0.0214781], [3, 0.08, 0.010739]], [0.342125, [3, -0.08, 0], [3, 0.08, 0]], [0.331386, [3, -0.08, 0], [3, 0.08, 0]], [0.342125, [3, -0.08, 0], [3, 0.08, 0]], [0.331386, [3, -0.08, 0], [3, 0.08, 0]], [0.342125, [3, -0.08, 0], [3, 0.08, 0]], [0.331386, [3, -0.08, 0], [3, 0.08, 0]], [0.342125, [3, -0.08, 0], [3, 0.08, 0]], [0.331386, [3, -0.08, 0], [3, 0.08, 0]], [0.342125, [3, -0.08, 0], [3, 0.08, 0]], [0.331386, [3, -0.08, 0], [3, 0.08, 0]], [0.342125, [3, -0.08, 0], [3, 0.08, 0]], [0.331386, [3, -0.08, 0], [3, 0.08, 0]], [0.342125, [3, -0.08, 0], [3, 0.16, 0]], [0.188724, [3, -0.16, 0.0787594], [3, 0.16, -0.0787594]], [-0.130432, [3, -0.16, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [-0.130432, [3, -0.08, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [-0.130432, [3, -0.08, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [-0.130432, [3, -0.08, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [-0.130432, [3, -0.08, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [-0.130432, [3, -0.08, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.08, 0]], [-0.130432, [3, -0.08, 0], [3, 0.08, 0]], [-0.0261199, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.130432, [3, -0.0933333, 0], [3, 0.266667, 0]], [0.108956, [3, -0.266667, -0.0162424], [3, 0.226667, 0.0138061]], [0.122762, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[1.24718, [3, -0.146667, 0], [3, 0.16, 0]], [1.36621, [3, -0.16, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]], [1.36621, [3, -0.08, 0], [3, 0.0933333, 0]], [1.17461, [3, -0.0933333, 0.048857], [3, 0.493333, -0.258244]], [0.444902, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[1.19801, [3, -0.146667, 0], [3, 0.16, 0]], [1.24397, [3, -0.16, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.0933333, 0]], [1.24397, [3, -0.0933333, 0], [3, 0.493333, 0]], [1.20261, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[0.8, [3, -0.146667, 0], [3, 0.16, 0]], [0.54, [3, -0.16, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]], [0.54, [3, -0.08, 0], [3, 0.0933333, 0]], [0.66, [3, -0.0933333, 0], [3, 0.493333, 0]], [0.3096, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.490923, [3, -0.146667, 0], [3, 0.16, 0]], [0.0199001, [3, -0.16, -0.160218], [3, 0.08, 0.0801089]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.08, 0]], [0.0199001, [3, -0.08, 0], [3, 0.08, 0]], [0.230057, [3, -0.08, 0], [3, 0.16, 0]], [-0.521602, [3, -0.16, 0], [3, 0.16, 0]], [0.06447, [3, -0.16, -0.15001], [3, 0.08, 0.0750049]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.08, 0]], [0.06447, [3, -0.08, 0], [3, 0.08, 0]], [0.153442, [3, -0.08, 0], [3, 0.0933333, 0]], [0.06447, [3, -0.0933333, 0.0556858], [3, 0.266667, -0.159102]], [-0.490923, [3, -0.266667, 0], [3, 0.226667, 0]], [0.13495, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.0674542, [3, -0.146667, 0], [3, 0.16, 0]], [-0.449421, [3, -0.16, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.08, 0]], [-0.449421, [3, -0.08, 0], [3, 0.16, 0]], [-0.139552, [3, -0.16, -0.105321], [3, 0.16, 0.105321]], [0.182504, [3, -0.16, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [0.182504, [3, -0.08, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [0.182504, [3, -0.08, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [0.182504, [3, -0.08, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [0.182504, [3, -0.08, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [0.182504, [3, -0.08, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.08, 0]], [0.182504, [3, -0.08, 0], [3, 0.08, 0]], [0.0183661, [3, -0.08, 0], [3, 0.0933333, 0]], [0.182504, [3, -0.0933333, 0], [3, 0.266667, 0]], [-0.0674542, [3, -0.266667, 0.0397034], [3, 0.226667, -0.0337479]], [-0.101202, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[-0.223922, [3, -0.146667, 0], [3, 0.16, 0]], [-0.516916, [3, -0.16, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, -0.0308504], [3, 0.16, 0.0617009]], [-0.239262, [3, -0.16, 0], [3, 0.16, 0]], [-0.516916, [3, -0.16, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.08, 0]], [-0.516916, [3, -0.08, 0], [3, 0.08, 0]], [-0.472429, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.516916, [3, -0.0933333, 0], [3, 0.266667, 0]], [-0.223922, [3, -0.266667, -0.0627419], [3, 0.226667, 0.0533306]], [-0.168698, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.48, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.16, 9.84])
    keys.append([[0.536942, [3, -0.146667, 0], [3, 0.16, 0]], [-0.0904641, [3, -0.16, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.08, 0]], [-0.0904641, [3, -0.08, 0], [3, 0.16, 0]], [0.628982, [3, -0.16, -0.00912113], [3, 0.16, 0.00912113]], [0.638103, [3, -0.16, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.08, 0]], [0.638103, [3, -0.08, 0], [3, 0.08, 0]], [0.635035, [3, -0.08, 0], [3, 0.0933333, 0]], [0.638103, [3, -0.0933333, 0], [3, 0.266667, 0]], [0.536942, [3, -0.266667, 0.101161], [3, 0.226667, -0.0859869]], [-0.091998, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[1.1352, [3, -0.146667, 0], [3, 0.16, 0]], [1.16093, [3, -0.16, -0.0257244], [3, 0.08, 0.0128622]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.08, 0]], [1.36032, [3, -0.08, 0], [3, 0.08, 0]], [1.16093, [3, -0.08, 0], [3, 0.0933333, 0]], [1.36032, [3, -0.0933333, -0.0166139], [3, 0.493333, 0.0878162]], [1.47422, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[-0.196393, [3, -0.146667, 0], [3, 0.16, 0]], [0.0915661, [3, -0.16, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.08, 0]], [0.0915661, [3, -0.08, 0], [3, 0.0933333, 0]], [0.0915661, [3, -0.0933333, 0], [3, 0.493333, 0]], [-0.115092, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.4, 0.88, 1.12, 1.36, 1.6, 1.84, 2.08, 2.32, 2.56, 2.8, 3.04, 3.28, 3.52, 3.76, 4, 4.24, 4.48, 4.72, 4.96, 5.2, 5.44, 5.68, 5.92, 6.16, 6.4, 6.64, 6.88, 7.12, 7.36, 7.6, 7.84, 8.08, 8.36, 9.84])
    keys.append([[0.720938, [3, -0.146667, 0], [3, 0.16, 0]], [0, [3, -0.16, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.493333, 0]], [0.0889301, [3, -0.493333, 0], [3, 0, 0]]])

    audio_thread = threading.Thread(target=audio_player_proxy.playFile, args=("nao_ps4_control/sounds/epicsax.ogg", ))
    motion_thread = threading.Thread(target=motion_proxy.angleInterpolationBezier, args=(names, times, keys, ))
    audio_thread.start()
    motion_thread.start()
    audio_thread.join()
    motion_thread.join()
